{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Personal Disk\\\\Web Tecnology\\\\react_js\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    // let newText = text.toUpperCase();\n    setText(text.toUpperCase());\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n    setText(text.toUpperCase());\n  };\n  const [text, setText] = useState(\"Convert\");\n  // text = \"So this is wrong way to change . . .\";\n  // setText  = \"So wrong way . . \";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"myBox\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-primary\",\n              children: props.enterDHeading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"\",\n            className: \"form-control bg-light\",\n            onChange: handleOnChange,\n            id: \"myBox\",\n            cols: \"\",\n            rows: \"8\",\n            placeholder: \"Enter the Text to Convert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"myBox\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-primary\",\n              children: props.convertDHeading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"\",\n            className: \"form-control bg-light\",\n            onChange: handleUpClick,\n            value: text,\n            id: \"myBox\",\n            cols: \"\",\n            rows: \"8\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleUpClick,\n              children: \"convert to upper case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TextForm, \"9tF1VyPxXl9Cb0xvefYxqpCJhcU=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","handleUpClick","setText","text","toUpperCase","handleOnChange","event","target","value","enterDHeading","convertDHeading"],"sources":["E:/My Personal Disk/Web Tecnology/react_js/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    // let newText = text.toUpperCase();\r\n    setText(text.toUpperCase())\r\n  }\r\n  const handleOnChange =(event)=>{\r\n    setText(event.target.value);\r\n    setText(text.toUpperCase())\r\n\r\n  }\r\n    const [text,setText] = useState(\"Convert\");\r\n    // text = \"So this is wrong way to change . . .\";\r\n    // setText  = \"So wrong way . . \";\r\n  return (\r\n    <div>\r\n        <div className=\"container\">\r\n          <div className=\"row mt-5\">\r\n      <div className=\"col-md-5\">\r\n        <label htmlFor=\"myBox\"><h4 className='text-primary'>{props.enterDHeading}</h4></label>\r\n        <textarea name=\"\" className='form-control bg-light' onChange={handleOnChange}  id=\"myBox\" cols=\"\" rows=\"8\" placeholder='Enter the Text to Convert'></textarea>\r\n      </div>\r\n      <div className=\"col-md-2\"></div>\r\n      <div className=\"col-md-5\">\r\n        <label htmlFor=\"myBox\"><h4 className='text-primary'>{props.convertDHeading}</h4></label>\r\n        <textarea name=\"\" className='form-control bg-light' onChange={handleUpClick} value={text} id=\"myBox\" cols=\"\" rows=\"8\" disabled></textarea>\r\n      </div>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col-md-3\">\r\n      <button className=\"btn btn-primary\" onClick={handleUpClick}>convert to upper case</button>\r\n            </div>\r\n          </div>\r\n          </div>\r\n    </div>\r\n        </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA;AAEpC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACtC,MAAMC,aAAa,GAAG,MAAI;IACxB;IACAC,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAAC;EAC7B,CAAC;EACD,MAAMC,cAAc,GAAGC,KAAK,IAAG;IAC7BJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BN,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAAC;EAE7B,CAAC;EACC,MAAM,CAACD,IAAI,EAACD,OAAO,CAAC,GAAGJ,QAAQ,CAAC,SAAS,CAAC;EAC1C;EACA;EACF,oBACE;IAAA,uBACI;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAK,SAAS,EAAC,UAAU;QAAA,wBAC7B;UAAK,SAAS,EAAC,UAAU;UAAA,wBACvB;YAAO,OAAO,EAAC,OAAO;YAAA,uBAAC;cAAI,SAAS,EAAC,cAAc;cAAA,UAAEE,KAAK,CAACS;YAAa;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QAAQ,eACtF;YAAU,IAAI,EAAC,EAAE;YAAC,SAAS,EAAC,uBAAuB;YAAC,QAAQ,EAAEJ,cAAe;YAAE,EAAE,EAAC,OAAO;YAAC,IAAI,EAAC,EAAE;YAAC,IAAI,EAAC,GAAG;YAAC,WAAW,EAAC;UAA2B;YAAA;YAAA;YAAA;UAAA,QAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QAC1J,eACN;UAAK,SAAS,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAO,eAChC;UAAK,SAAS,EAAC,UAAU;UAAA,wBACvB;YAAO,OAAO,EAAC,OAAO;YAAA,uBAAC;cAAI,SAAS,EAAC,cAAc;cAAA,UAAEL,KAAK,CAACU;YAAe;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QAAQ,eACxF;YAAU,IAAI,EAAC,EAAE;YAAC,SAAS,EAAC,uBAAuB;YAAC,QAAQ,EAAET,aAAc;YAAC,KAAK,EAAEE,IAAK;YAAC,EAAE,EAAC,OAAO;YAAC,IAAI,EAAC,EAAE;YAAC,IAAI,EAAC,GAAG;YAAC,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QACtI,eACF;UAAK,SAAS,EAAC,UAAU;UAAA,uBACvB;YAAK,SAAS,EAAC,UAAU;YAAA,uBAC/B;cAAQ,SAAS,EAAC,iBAAiB;cAAC,OAAO,EAAEF,aAAc;cAAA,UAAC;YAAqB;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA;QAC9E;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACI;AAEd;AAAC,GAnCuBF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}